on:
  push:
    branches:
      - 'main'
    tags-ignore:
      - 'nginx-*'
    paths-ignore:
      - '.editorconfig'
      - '.env'
      - '.env.example'
      - '.gitignore'
      - '.phpunit.result.cache'
      - '.styleci.yml'
      - 'docker-compose.yml'
      - 'tmp/**'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '.editorconfig'
      - '.env'
      - '.env.example'
      - '.gitignore'
      - '.styleci.yml'
      - 'docker-compose.yml'
      - 'tmp/**'
  workflow_dispatch:


env:
  DOCKER_NODE_BUILD_FILE: "./tools/docker/node/node.docker"
  DOCKER_NODE_BUILD_TAG: "house_node_build:latest"
  BACKEND_DOCKERFILE: "./tools/docker/app/app.docker"
  BACKEND_DOCKER_IMAGE: "gcr.io/voziv-web/house-backend"
  BACKEND_DOCKER_LATEST: "gcr.io/voziv-web/house-backend:latest"
  FRONTEND_DOCKERFILE: "./tools/docker/nginx/nginx.docker"
  FRONTEND_DOCKER_IMAGE: "gcr.io/voziv-web/house-frontend"
  FRONTEND_DOCKER_LATEST: "gcr.io/voziv-web/house-frontend:latest"
  DOCKER_REGISTRY_URL: "https://gcr.io"
  MAIN_BRANCH_REF: 'refs/heads/main'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v2

      - name: "Authenticate with docker registry"
        run: echo '${{ secrets.GCP_SERVICE_ACCOUNT_JSON}}' | docker login -u _json_key --password-stdin "${DOCKER_REGISTRY_URL}"

      - name: "Set docker branch tag"
        run: |
          # Take branch name and turn it into a sane docker image tag
          # eg:
          # refs/heads/main -> main
          # refs/tags/0.0.1 -> 0.0.1
          echo "BACKEND_DOCKER_TAG=${BACKEND_DOCKER_IMAGE}:${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "FRONTEND_DOCKER_TAG=${FRONTEND_DOCKER_IMAGE}:${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: "Docker pull"
        run: |
          docker pull "${BACKEND_DOCKER_TAG}" || true
          docker pull "${FRONTEND_DOCKER_TAG}" || true

      - name: "Docker build node build image"
        run: |
          docker build \
            --tag "${DOCKER_NODE_BUILD_TAG}" \
            --file "${DOCKER_NODE_BUILD_FILE}" \
            .

      - name: "Docker build backend"
        run: |
          docker build \
            --cache-from "${BACKEND_DOCKER_TAG}" \
            --build-arg BUILD_DATE=`TZ="America/Toronto" date +"%Y-%m-%dT%H:%M:%SZ"` \
            --build-arg VCS_REF=`${GITHUB_SHA}` \
            --tag "${BACKEND_DOCKER_TAG}" \
            --file "${BACKEND_DOCKERFILE}" \
            .

      - name: "Docker build frontend"
        run: |
          docker build \
            --cache-from "${FRONTEND_DOCKER_TAG}" \
            --build-arg BUILD_DATE=`TZ="America/Toronto" date +"%Y-%m-%dT%H:%M:%SZ"` \
            --build-arg VCS_REF=`${GITHUB_SHA}` \
            --tag "${FRONTEND_DOCKER_TAG}" \
            --file "${FRONTEND_DOCKERFILE}" \
            .

      - name: "Run tests?"
        run: |
          echo "Tests will run here someday.... or not"
#          docker run ${DOCKER_TAG} -- su-exec www-data composer install
#          docker run ${DOCKER_TAG} -- su-exec www-data composer install
#          docker run ${DOCKER_TAG} -- su-exec www-data php vendor/bin/phpunit

      - name: "Push tag to repository"
        run: |
          docker push ${BACKEND_DOCKER_TAG}
          docker push ${FRONTEND_DOCKER_TAG}

      - name: "Tag & Push Latest"
        if: github.ref == '${{ env.MAIN_BRANCH_REF }}'
        run: |
          echo "Pushing ${FRONTEND_DOCKER_LATEST} and ${BACKEND_DOCKER_LATEST}"
          docker tag ${BACKEND_DOCKER_TAG} ${BACKEND_DOCKER_LATEST}
          docker tag ${FRONTEND_DOCKER_TAG} ${FRONTEND_DOCKER_LATEST}
          docker push ${BACKEND_DOCKER_LATEST}
          docker push ${FRONTEND_DOCKER_LATEST}
          echo "Pushed ${FRONTEND_DOCKER_LATEST} and ${BACKEND_DOCKER_LATEST}"
